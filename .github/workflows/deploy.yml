name: Deploy

on:
  push:
    branches: "main"
  workflow_dispatch:

env:
  NODE_VERSION: 22
  CONTAINER_REGISTRY: ghcr.io

jobs:
  build-astro:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install
        run: bun install 

      - name: Build 
        run: bun run build
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
  
  build-aws-cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install Bun packages
        run: bun install --frozen-lockfile
      
      - name: Synth AWS-CDK stack
        run: bunx cdk synth --ci --no-lookups --strict

      - name: Upload synth artifact
        uses: actions/upload-artifact@v4
        with:
          name: aws-cdk-synth
          path: cdk.out

  deploy-aws-cdk:
    needs: 
      - build-aws-cdk
      - build-astro
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: aws-cdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install Bun packages
        run: bun install --frozen-lockfile

      - uses: mercurialworld/chaeri-actions/setup-aws@v1
        with:
          role-to-assume: repo

      - name: Download synth artifact
        uses: actions/download-artifact@v4
        with:
          name: aws-cdk-synth
          path: cdk.out

      - name: Deploy stack
        run: bunx cdk deploy --ci --no-lookups --require-approval=never --app=cdk.out --outputs-file=outputs.json

      - name: Upload outputs artifact
        uses: actions/upload-artifact@v4
        with:
          name: aws-cdk-outputs
          path: outputs.json

  deploy-codedeploy:
    needs:
      - deploy-aws-cdk
    permissions:
      id-token: write
      contents: read
    environment:
      name: codedeploy
      url: ${{ steps.deploy.outputs.deployment-url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download outputs artifact
        uses: actions/download-artifact@v4
        with:
          name: aws-cdk-outputs

      - name: Parse outputs
        id: parse
        uses: mercurialworld/chaeri-actions/parse-cdk@v1
        with:
          file: outputs.json
      
      - name: Setup AWS
        uses: mercurialworld/chaeri-actions/setup-aws@v1
        with:
          role-to-assume: ${{ steps.parse.outputs.ActionsCodeDeployRoleARN }}
      
      - name: Deploy site 
        id: deploy
        uses: mercurialworld/chaeri-actions/deploy-codedeploy@v1
        with:
          path: codedeploy
          stack: ${{ steps.parse.outputs.stack-name }}
          application: ${{ steps.parse.outputs.ApplicationName }}
          deployment-group: ${{ steps.parse.outputs.DeploymentGroupName }}